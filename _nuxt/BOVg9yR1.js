import{k as R,l as m,m as P,n as F,q as j,v as z,x as H,y as M,z as T,A as S,u as U,B as V,C as $,e as q,D as x,E as L,G as K,H as y}from"./CM2u5aAs.js";const G=s=>s==="defer"||s===!1;function I(...s){var g;const n=typeof s[s.length-1]=="string"?s.pop():void 0;typeof s[0]!="string"&&s.unshift(n);let[t,i,a={}]=s;if(typeof t!="string")throw new TypeError("[nuxt] [asyncData] key must be a string.");if(typeof i!="function")throw new TypeError("[nuxt] [asyncData] handler must be a function.");const e=R(),u=i,p=()=>m.value,b=()=>e.isHydrating?e.payload.data[t]:e.static.data[t];a.server=a.server??!0,a.default=a.default??p,a.getCachedData=a.getCachedData??b,a.lazy=a.lazy??!1,a.immediate=a.immediate??!0,a.deep=a.deep??m.deep,a.dedupe=a.dedupe??"cancel";const D=()=>a.getCachedData(t,e)!=null;if(!e._asyncData[t]||!a.immediate){(g=e.payload._errors)[t]??(g[t]=m.errorValue);const c=a.deep?P:F;e._asyncData[t]={data:c(a.getCachedData(t,e)??a.default()),pending:P(!D()),error:j(e.payload._errors,t),status:P("idle"),_default:a.default}}const r={...e._asyncData[t]};delete r._default,r.refresh=r.execute=(c={})=>{if(e._asyncDataPromises[t]){if(G(c.dedupe??a.dedupe))return e._asyncDataPromises[t];e._asyncDataPromises[t].cancelled=!0}if((c._initial||e.isHydrating&&c._initial!==!1)&&D())return Promise.resolve(a.getCachedData(t,e));r.pending.value=!0,r.status.value="pending";const f=new Promise((l,o)=>{try{l(u(e))}catch(h){o(h)}}).then(async l=>{if(f.cancelled)return e._asyncDataPromises[t];let o=l;a.transform&&(o=await a.transform(l)),a.pick&&(o=k(o,a.pick)),e.payload.data[t]=o,r.data.value=o,r.error.value=m.errorValue,r.status.value="success"}).catch(l=>{if(f.cancelled)return e._asyncDataPromises[t];r.error.value=S(l),r.data.value=U(a.default()),r.status.value="error"}).finally(()=>{f.cancelled||(r.pending.value=!1,delete e._asyncDataPromises[t])});return e._asyncDataPromises[t]=f,e._asyncDataPromises[t]},r.clear=()=>N(e,t);const _=()=>r.refresh({_initial:!0}),w=a.server!==!1&&e.payload.serverRendered;{const c=V();if(c&&!c._nuxtOnBeforeMountCbs){c._nuxtOnBeforeMountCbs=[];const o=c._nuxtOnBeforeMountCbs;z(()=>{o.forEach(h=>{h()}),o.splice(0,o.length)}),H(()=>o.splice(0,o.length))}w&&e.isHydrating&&(r.error.value||D())?(r.pending.value=!1,r.status.value=r.error.value?"error":"success"):c&&(e.payload.serverRendered&&e.isHydrating||a.lazy)&&a.immediate?c._nuxtOnBeforeMountCbs.push(_):a.immediate&&_();const f=$();if(a.watch){const o=M(a.watch,()=>r.refresh());f&&T(o)}const l=e.hook("app:data:refresh",async o=>{(!o||o.includes(t))&&await r.refresh()});f&&T(l)}const v=Promise.resolve(e._asyncDataPromises[t]).then(()=>r);return Object.assign(v,r),v}function N(s,n){n in s.payload.data&&(s.payload.data[n]=void 0),n in s.payload._errors&&(s.payload._errors[n]=m.errorValue),s._asyncData[n]&&(s._asyncData[n].data.value=void 0,s._asyncData[n].error.value=m.errorValue,s._asyncData[n].pending.value=!1,s._asyncData[n].status.value="idle"),n in s._asyncDataPromises&&(s._asyncDataPromises[n].cancelled=!0,s._asyncDataPromises[n]=void 0)}function k(s,n){const t={};for(const i of n)t[i]=s[i];return t}function Y(s,n,t){const[i={},a]=typeof n=="string"?[{},n]:[n,t],e=q(()=>y(s)),u=i.key||x([a,typeof e.value=="string"?e.value:"",...J(i)]);if(!u||typeof u!="string")throw new TypeError("[nuxt] [useFetch] key must be a string: "+u);if(!s)throw new Error("[nuxt] [useFetch] request is missing.");const p=u===a?"$f"+u:u;if(!i.baseURL&&typeof e.value=="string"&&e.value[0]==="/"&&e.value[1]==="/")throw new Error('[nuxt] [useFetch] the request URL must not start with "//".');const{server:b,lazy:D,default:r,transform:_,pick:w,watch:v,immediate:g,getCachedData:c,deep:f,dedupe:l,...o}=i,h=L({...K,...o,cache:typeof i.cache=="boolean"?void 0:i.cache}),B={server:b,lazy:D,default:r,transform:_,pick:w,immediate:g,getCachedData:c,deep:f,dedupe:l,watch:v===!1?[]:[h,e,...v||[]]};let d;return I(p,()=>{var E;(E=d==null?void 0:d.abort)==null||E.call(d),d=typeof AbortController<"u"?new AbortController:{};const O=y(i.timeout);let C;return O&&(C=setTimeout(()=>d.abort(),O),d.signal.onabort=()=>clearTimeout(C)),(i.$fetch||globalThis.$fetch)(e.value,{signal:d.signal,...h}).finally(()=>{clearTimeout(C)})},B)}function J(s){var t;const n=[((t=y(s.method))==null?void 0:t.toUpperCase())||"GET",y(s.baseURL)];for(const i of[s.params||s.query]){const a=y(i);if(!a)continue;const e={};for(const[u,p]of Object.entries(a))e[y(u)]=y(p);n.push(e)}return n}export{Y as u};
